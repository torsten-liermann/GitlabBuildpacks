cache: &global_cache
  key: "build-$CI_PIPELINE_ID"
  paths:
    - "cnb.tgz"
  policy: push

.registry-auth-for-docker:
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$DOCKER_REGISTRY_URL\":{\"username\":\"$DOCKER_REGISTRY_USERNAME\",\"password\":\"$DOCKER_REGISTRY_PASSWORD\"}}}" >> ~/.docker/config.json

.maven-java-environment:
  image: "$CNCF_BUILDER_IMAGE"
  cache:
    <<: *global_cache
    policy: pull
  variables:
    MAVEN_CLI_OPTS: "--no-transfer-progress --batch-mode"
  before_script:
    - | 
      ( cd / && tar xzf $CI_PROJECT_DIR/cnb.tgz )
      export JAVA_HOME="$(cat $(find /layers -name JAVA_HOME* | grep /env.build/))"
      export MAVEN_HOME="$(dirname $(dirname $(find /layers -name mvn -type f)))"
      PATH="$(pwd):$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH"

create-java-maven-environment:
  image: "$CNCF_BUILDER_IMAGE"
  stage: .pre
  before_script:
    - |
      ENV_DIR=./platform/env
      mkdir -p "$ENV_DIR"
      for env in "${envs[@]}"; do
          IFS='=' read -r key value string <<< "$env"
          if [[ "$key" != "" && "$value" != "" ]]; then
              path="${ENV_DIR}/${key}"
              echo -n "$value" > "$path"
          fi
      done
  script:
    - |
      echo -n -this-option-will-break-maven > platform/env/BP_MAVEN_BUILD_ARGUMENTS
      /cnb/lifecycle/creator -platform ./platform ${DEBUG:+-log-level debug} -app . -cache-image $APP_IMAGE_NAME/paketo-build-cache:latest $APP_IMAGE_NAME:latest || true
      tar czf cnb.tgz /layers